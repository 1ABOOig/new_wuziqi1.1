IMAGE 定义图片
//loadimage  加载图片
//putimage   显示图片
//putimage(x, y, &image)
//putimage(x, y, l, w, &image, xx, yy)
//x, y 窗口的坐标
//l, w输出的图像的长和宽
//&image   图片
//xx, yy 图片中的坐标



#define _CRT_SECURE_NO_WARNINGS 1
#pragma warning(default: 4996)//新版本 VC++ 默认会将 C4996 归类为 Error，导致无法编译。
#include<graphics.h>
#include<windows.h>


int num = -1;//1表示黑子下棋，-1表示白子
int piece[15][15];
IMAGE bgp;//定义图片
void putbackground()
{
	putimage(0, 0, 240, 240, &bgp, 60, 60);
	putimage(240, 0, 240, 240, &bgp, 60, 60);
	putimage(0, 240, 240, 240, &bgp, 60, 60);
	putimage(240, 240, 240, 240, &bgp, 60, 60);
	//
}

void draw_line()
{
	setlinecolor(BLACK);
	for (int x = 15; x < 480; x += 30)
		line(x, 15, x, 465);
	for (int y = 15; y < 480; y += 30)
		line(15, y, 465, y);

}


void draw_point()
{
	setfillcolor(BLACK);
	fillcircle(4*30-15,4*30-15,3);//x,y,r 
	fillcircle(4 * 30 - 15, 12 * 30 - 15, 3);
	fillcircle(8 * 30 - 15, 8 * 30 - 15, 3);
	fillcircle(12 * 30 - 15, 4 * 30 - 15, 3);
	fillcircle(12 * 30 - 15, 12 * 30 - 15, 3);

}
void initpiece()
{
	for (int i = 0; i < 15;i++)
	for (int j = 0; j < 15; j++)
		piece[i][j] = 0;
}

int change_piece(int x, int y)
{
	if (piece[x][y] != 0)
	{
		return 0;
	}
	else
		piece[x][y] = num;
	return 1;
}
void draw_piece(int m,int n) 
{
	if (num == -1)
		setfillcolor(WHITE);
	else if (num == 1)
		setfillcolor(BLACK);
	int x, y;
	x = m / 30 ;
	y = n / 30;
	if (change_piece(x, y) == 0)
		return;
	fillcircle(m - (m % 30) + 15, n - (n % 30) + 15, 13);
	num *= -1 ;

}

int check_five_piece(int x,int y)
{
	if (x<2 || y<2 || x>12 || y>12)
		return 0;
	if (piece[x][y] == piece[x - 1][y] && piece[x][y] == piece[x - 2][y] && piece[x][y] == piece[x + 1][y] && piece[x][y] == piece[x + 2][y])
	return 1;
	if (piece[x][y] == piece[x ][y- 1] && piece[x][y] == piece[x ][y- 2] && piece[x][y] == piece[x][y + 1] && piece[x][y] == piece[x ][y+ 2])
		return 1;
	if (piece[x][y] == piece[x - 1][y-1] && piece[x][y] == piece[x - 2][y-2] && piece[x][y] == piece[x + 1][y+1] && piece[x][y] == piece[x + 2][y+2])
		return 1;
	if (piece[x][y] == piece[x - 1][y] && piece[x][y] == piece[x - 2][y] && piece[x][y] == piece[x + 1][y] && piece[x][y] == piece[x + 2][y])
		return 1;
	return 0;
}
int check_over()
{
	for (int i = 0; i < 15; i++)
	for (int j = 0; j < 15; j++)
	{
		if (piece[i][j] == 0)
			continue;
		else
			if(check_five_piece(i, j)==1)
				return 1;
	}
}


int main()
{
	initgraph(480,480);//x:窗口的横向距离（像素点）
	//棋子大小半径大小13 正方形边长30  每个棋子间距4 
	loadimage(&bgp,_T("qipan.jpg"));//加载图片
	
	settextcolor(RED);
	settextstyle(50, 20, _T("隶书"));
	setbkmode(TRANSPARENT);
	putbackground();//显示图片
	draw_line();
	draw_point();//画中心点
	MOUSEMSG m;
	initpiece();
	while (1)
	{
		m = GetMouseMsg();
		if (m.uMsg == WM_LBUTTONDOWN)
		{
			draw_piece(m.x, m.y);
		}
		if (check_over() == 1){
			outtextxy(180, 200, _T("游戏结束"));
			system("pause");
			return 0;
		}
	}
	return 0;
}

